# A workflow to do PR test runs
#
# Reference:
#   - https://github.com/actions/checkout
#   - https://github.com/conda-incubator/setup-miniconda

name: ci-tests

# Triggers the workflow on pull-request or push events
on:
  push:
    branches:
      - "main"
      - "v*x"
    tags:
      - "v*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  tests:
    name: "Test Python ${{ matrix.version }} session= ${{ matrix.session }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        session: ["tests", "doctests-docs", "doctests-api"]
    defaults:
      run:
        shell: bash -l {0}

    env:
      IRIS_TEST_DATA_VERSION: "2.20"

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: "Create conda environment"
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          activate-environment: testenv
          python-version: ${{ matrix.version }}
          channels: conda-forge
          show-channel-urls: true

      - name: "Install dependencies"
        run: |
          conda install --yes numpy pytest pytest-mock iris xarray filelock requests zarr aiohttp

      - name: "Install *latest* Iris"
        run: |
          git clone https://github.com/SciTools/iris.git ./iris
          cd iris
          pip install -e .
          cd ..

      - name: "Install repo-under-test"
        run: |
          python -m pip install --no-deps --editable .

      - name: "Conda info"
        run: |
          conda info
          conda list --explicit

      - name: "Fetch Iris-test-data"
        run: |
          wget --quiet https://github.com/SciTools/iris-test-data/archive/v${IRIS_TEST_DATA_VERSION}.zip -O iris-test-data.zip
          unzip -q iris-test-data.zip
          mkdir --parents ${GITHUB_WORKSPACE}/iris_test_data
          mv iris-test-data-${IRIS_TEST_DATA_VERSION} ${GITHUB_WORKSPACE}/iris_test_data_download

      - name: "Run tests"
        if: matrix.session == 'tests'
        run: |
          ls ${GITHUB_WORKSPACE}/iris_test_data_download/test_data
          OVERRIDE_TEST_DATA_REPOSITORY=${GITHUB_WORKSPACE}/iris_test_data_download/test_data PYTHONPATH=./tests:$PYTHONPATH pytest -v ./tests

      - name: "Run doctests: Docs"
        if: matrix.session == 'doctests-docs'
        run: |
          cd docs
          pytest --doctest-glob="*.rst"

      - name: "Run doctests: API"
        if: matrix.session == 'doctests-api'
        run: |
          cd lib
          pytest --doctest-modules
